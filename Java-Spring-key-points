In Thread Start method will create a new thread and will execute whatever we have inside run method.
But If we will call only Run method Than It will not create a new thread instead will call existing thread.

#####Internal Working of ConCurrent HashMap
Completable feature In java to manage the concurrent Thread. 

#########Compare List and set for searching
1. Sets are faster than list for searching. Because in List In worst Case we need to iterate till the last element but in set The location of the added element will be 
the corresponding HAsh Value of the added element so During search the value will be fetched directly as per the hashkey of the element to be fetched and will get the result in 
1 Time Complexity even in worst case.


######Map and SingletonMap ############
a. Collections.Singleton map is much better by Memory and Developer perspective when we are in need to have only single key value pair in the map and in future we wouldn't
need to modify or any other element in the map as put in this singleton Map Will throw UnSupoortedOperationException.
b. But in the Simple Map we are free to use and add any element.
c. SingletonMap has to contain two member fields: the key and the value, whereas a HashMap maintains an internal array of Node objects plus other member fields.So 
To use these maps are really prudent choice to use these maps.

###### JPQL Query Spring ###########
1. By Extending Repository<Entity, IndexId> in SPring Repository will help us by following way.
a. It provide us the crud Methods to use for our Repository.
b. It allows us to scan our Repository during classpath scanning.

2. By Extending JPQL Query, Jpa Provides us the Much Flexible to have the Custom Query Like SQL to fetch the data for us from the database.
3. So Any JPA Implementation Framework First will convert JPQL Query to SQL then will execute that on database.
4. By Using @Query Annotation of JPA We can write our custom Query.

############ Transaction in Spring #########################
1. If inside the readOnly Transactions, we call any readOnly=false Transaction then it will flush and Save the Records in to database untill we will create the New 
Transaction for readOnly=false.
2. It Doesn't work since the previous transactional is being continued.
3. @Transactional Annotation we used to have the transaction behaviour in our spring Annotation class or method.
4. If propagation_Required is new in the transactions then inner transaction will be seaparate than the outer transaction and the behaviour for inner Transaction will
be completely independent. 

##### Transaction Management in Spring ########
1. In It's default configuration, The Spring Framework Transaction Runtime Code Marks Only a Transaction for Roll Back Only in the case of RunTime Exception.
2. Checked exceptions that are thrown from a transactional method do not result in rollback in the default configuration.
3. We can configure exactly which Exception Type we want to mark Configure for roll back.

########## Install Specifications Versions of Gradle ##########
https://kodejava.org/how-do-i-install-gradle-in-os-x/


######Import Code Snippet For Specific Action #########
1. Convert Integer Array to Array List :- 
List<Integer> intList = Arrays.stream(arr).boxed().collect(Collectors.toList());

2. Make Various Groups of Rooms Based On Room Types using Streams.
Map<String, List<Room>> roomsList= List.Stream().collect(Collectors.joining(Room:getRoomType));

##Difference betweeb SQL Server Studio and Mysql
1. Oracle supports star query optimization while SQL server doesn’t offer query optimization.
2. In oracle, values do not change before commit whereas in SQL Server values are changed even before commit.
3. Oracle allows rollback during the transaction process whereas SQL server doesn’t allow rollback in the transaction process.
4. Oracle supports many “Schemas” with the instance whereas SQL server offers “Schemas” within each user database.
5. Oracle allows database, full, file-level, incremental & differential backups on the other hand, SQL server allows full, partial, and incremental backups.
6. Oracle uses both “after” and “before” triggers whereas SQL server mostly uses only “after” triggers.

#######
In Concurrent HashMap Locks Exists only on Writes so reading generally much faster but in Synchronized hashmap the Lock Exists both on reads and writes.
So With synch. Hashmap Performance hits a lot.


##########SprinBoot Exception Handling ###########################
1. Spring Boot Global Exception Handler Catches the Exception to Handle only if we don't have any explicit catch block for this Exception. Otherwise it will be handled by
explicit catch block.
2. In Spring Boot we can have a Abstract Class As Spring Component and other Service Can be Autowired in it.
3. In Spring Boot Jwt Token Filter Will Filter the Each Incoming Request and process that accordingly if it passes.

**In Java Map We do have getOrDefault Method that can be used to get the values.

############## Code Performance Check - Visual Studio Profiling ##############################
1. To Do The Profiling and to know the memory leaks in the code we can have the profiling in the visual Studio Code.
2. 

############Postman_Enviornment_Variable_Set########################################
1. To Set Env Variable Value from Response use below block in Test Section where sessionId is the Key in response Object and token is the env Variable:
var jsonData = JSON.parse(responseBody);
pm.environment.set("token", "Bearer "+jsonData["sessionId"]);

2. 







